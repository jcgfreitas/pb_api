// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jcgfreitas/pb_api/internal/handlers (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/jcgfreitas/pb_api/internal/domain"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateCoupon mocks base method
func (m *MockService) CreateCoupon(arg0 domain.APICoupon) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCoupon", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateCoupon indicates an expected call of CreateCoupon
func (mr *MockServiceMockRecorder) CreateCoupon(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCoupon", reflect.TypeOf((*MockService)(nil).CreateCoupon), arg0)
}

// DeleteCoupon mocks base method
func (m *MockService) DeleteCoupon(arg0 uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCoupon", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCoupon indicates an expected call of DeleteCoupon
func (mr *MockServiceMockRecorder) DeleteCoupon(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCoupon", reflect.TypeOf((*MockService)(nil).DeleteCoupon), arg0)
}

// GetCoupon mocks base method
func (m *MockService) GetCoupon(arg0 uint, arg1 *domain.Coupon) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoupon", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetCoupon indicates an expected call of GetCoupon
func (mr *MockServiceMockRecorder) GetCoupon(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoupon", reflect.TypeOf((*MockService)(nil).GetCoupon), arg0, arg1)
}

// GetCoupons mocks base method
func (m *MockService) GetCoupons(arg0 *[]domain.Coupon, arg1 map[string][]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoupons", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetCoupons indicates an expected call of GetCoupons
func (mr *MockServiceMockRecorder) GetCoupons(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoupons", reflect.TypeOf((*MockService)(nil).GetCoupons), arg0, arg1)
}

// UpdateCoupon mocks base method
func (m *MockService) UpdateCoupon(arg0 uint, arg1 domain.APICoupon) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCoupon", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCoupon indicates an expected call of UpdateCoupon
func (mr *MockServiceMockRecorder) UpdateCoupon(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCoupon", reflect.TypeOf((*MockService)(nil).UpdateCoupon), arg0, arg1)
}
